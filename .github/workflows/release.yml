name: release artifacts
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

  linux:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64, aarch64, riscv64, i386]
    env:
      TARGET: gyro-${{ github.ref }}-linux-${{ matrix.arch }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.3.0
      with:
        version: master

    - run: mkdir $TARGET

    - name: linux-${{ matrix.arch }}
      run: zig build -Dbootstrap -Dtarget=${{ matrix.arch }}-linux -Drelease-safe --prefix $TARGET

    - name: Create Tarball
      run: tar -czvf $TARGET.tar.gz $TARGET

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./$TARGET.tar.gz
        asset_name: $TARGET.tar.gz
        asset_content_type: application/tarball

  windows:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64, i386]
    env:
      TARGET: gyro-${{ github.ref }}-windows-${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.3.0
      with:
        version: master

    - run: sudo apt install zip
    - run: mkdir $TARGET

    - name: windows-${{ matrix.arch }}
      run: zig build -Dbootstrap -Dtarget=${{ matrix.arch }}-windows-gnu -Drelease-safe --prefix $TARGET

    - name: Create zip
      run: zip -r $TARGET.zip $TARGET 

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./$TARGET.zip
        asset_name: $TARGET.zip
        asset_content_type: application/zip

  macos:
    runs-on: macos-latest
    needs: create_release
    strategy:
      matrix:
        arch: [x86_64]
    env:
      TARGET: gyro-${{ github.ref }}-macos-${{ matrix.arch }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v1.3.0
      with:
        version: master

    - run: mkdir $TARGET

    - name: macos-${{ matrix.arch }}
      run: zig build -Dbootstrap -Drelease-safe --prefix $TARGET

    - name: Create Tarball
      run: tar -czvf $TARGET.tar.gz $TARGET

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./$TARGET.tar.gz
        asset_name: $TARGET.tar.gz
        asset_content_type: application/tarball
